Q1:-List out the features of HTML5.
sol:-
HTML5, the latest version of Hypertext Markup Language, introduces numerous features and improvements over its predecessors. Here's a list of some key features:

1. **Semantics**: HTML5 introduces new semantic elements like `<header>`, `<footer>`, `<nav>`, `<article>`, `<section>`, `<aside>`, etc., which provide better structure to web pages and improve accessibility.

2. **Audio and Video Support**: Native support for embedding audio and video content using `<audio>` and `<video>` tags, eliminating the need for third-party plugins like Flash.

3. **Canvas**: The `<canvas>` element allows for dynamic, scriptable rendering of 2D shapes and bitmap images. It's widely used for creating interactive games, data visualizations, and other graphics-intensive applications.

4. **SVG Support**: HTML5 provides native support for Scalable Vector Graphics (SVG), enabling the inclusion of vector graphics directly within web pages.

5. **Offline Web Applications**: HTML5 introduces the Application Cache (`manifest`) feature, allowing web developers to create web applications that can be accessed offline once they've been initially loaded in the browser.

6. **Geolocation**: HTML5 provides an API for accessing a user's geographic location through the browser, enabling location-aware web applications.

7. **Web Storage**: HTML5 introduces the `localStorage` and `sessionStorage` APIs, which allow web applications to store data locally within the user's browser, providing a more efficient and persistent alternative to cookies.

8. **Web Workers**: HTML5 enables the use of web workers, which are background scripts that run concurrently with the main browser thread, allowing for multi-threaded JavaScript execution and improving performance in web applications.

9. **WebSocket**: HTML5 introduces the WebSocket API, which enables bidirectional communication between the browser and a server over a single, long-lived connection, facilitating real-time data exchange in web applications.

10. **CSS3**: While not directly part of HTML5, it's often associated with it. CSS3 provides advanced styling capabilities, including features like transitions, animations, gradients, and more, enhancing the visual presentation of web content.

11. **Responsive Web Design**: HTML5 encourages the development of responsive web designs that adapt to different screen sizes and orientations, ensuring a consistent user experience across devices.

These features collectively contribute to making HTML5 a more powerful and versatile language for creating modern web applications and content.

Q2:-What are HTML Entities? List out 5 commonly used HTML entities.
sol:-HTML entities are special codes used to represent characters that have special meaning in HTML, or characters that cannot be easily typed directly on a keyboard. They are typically written using an ampersand (`&`) followed by a mnemonic code or a numerical code, and ending with a semicolon (`;`).

Here are five commonly used HTML entities:

1. `&lt;` - Represents the less-than sign (`<`). Used to display the less-than symbol without triggering HTML interpretation.

2. `&gt;` - Represents the greater-than sign (`>`). Used to display the greater-than symbol without triggering HTML interpretation.

3. `&amp;` - Represents the ampersand (`&`). Used to display the ampersand symbol without triggering HTML interpretation.

4. `&quot;` - Represents the double quotation mark (`"`). Used to display double quotation marks without triggering HTML interpretation.

5. `&nbsp;` - Represents a non-breaking space. Used to insert a space character that prevents line breaks from occurring between words or elements.

These entities are commonly used in HTML to ensure correct rendering of special characters and symbols, as well as to prevent HTML parsers from misinterpreting certain characters.

Q3:- Define accessibility in the context of web development? Discuss why it's essential to create accessible
websites and how it benefits different user groups.
sol:-Accessibility in the context of web development refers to the practice of designing and developing websites and web applications in a way that ensures they can be accessed and used by people with disabilities or impairments. This includes individuals with visual, auditory, motor, cognitive, or neurological disabilities, as well as those with temporary disabilities or situational limitations.

Creating accessible websites is essential for several reasons:

1. **Inclusivity**: Accessible websites ensure that everyone, regardless of their abilities or disabilities, can access and use the content and functionality provided. It promotes inclusivity and equal access to information and services for all users.

2. **Legal Compliance**: Many countries have laws and regulations requiring websites to be accessible to people with disabilities. Failure to comply with these regulations can lead to legal consequences, including lawsuits and fines.

3. **Improved User Experience**: Accessibility features often enhance the overall user experience for all users, not just those with disabilities. Clear navigation, well-organized content, and alternative text for images, for example, benefit all users by making the website more user-friendly.

4. **Broader Audience Reach**: By making websites accessible, developers can reach a broader audience, including people with disabilities, elderly individuals, and those using assistive technologies such as screen readers or voice recognition software.

5. **Search Engine Optimization (SEO)**: Many accessibility features, such as descriptive alt text for images and semantic HTML markup, can also improve a website's search engine ranking. This benefits both users and website owners by making content more discoverable and accessible.

Accessible websites benefit different user groups in various ways:

- **Visually Impaired Users**: Screen readers, which convert text to speech or Braille output, rely on accessible HTML markup and alternative text to convey information to visually impaired users. Properly labeled form fields, headings, and landmarks also help users navigate websites more easily.

- **Hearing Impaired Users**: Providing captions or transcripts for audio and video content ensures that hearing-impaired users can access the information conveyed through multimedia content.

- **Motor Impaired Users**: Users with motor impairments may rely on keyboard navigation or assistive technologies like speech recognition software. Accessible websites ensure that all functionality can be operated using a keyboard and that clickable elements have an adequate target size to accommodate users with limited dexterity.

- **Cognitive and Neurological Disabilities**: Clear and consistent navigation, simple language, and predictable website behavior benefit users with cognitive and neurological disabilities by reducing cognitive overload and improving comprehension.

Q4:- List any 3 ways which help us in improving the accessibility of HTML.
sol:- Certainly! Here are three ways to improve the accessibility of HTML:

1. **Use Semantic HTML**: Semantic HTML elements provide meaning to the content structure, making it easier for assistive technologies and search engines to understand the content. By using elements like `<header>`, `<nav>`, `<main>`, `<footer>`, `<article>`, `<section>`, and `<aside>`, you provide clear structure and context to your content. Additionally, using appropriate heading levels (`<h1>` to `<h6>`) and list elements (`<ul>`, `<ol>`, `<li>`) helps users navigate and understand the content more easily.

2. **Provide Alternative Text for Images**: Images play a crucial role in web content, but they can be inaccessible to users who are visually impaired or using screen readers. By providing descriptive alternative text (`alt` attribute) for images, you ensure that users with visual impairments can understand the content conveyed by the images. Additionally, decorative images should have empty `alt` attributes (`alt=""`) to indicate to screen readers that they are purely decorative and can be skipped.

3. **Ensure Keyboard Accessibility**: Not all users can interact with websites using a mouse or touch input. Keyboard accessibility is essential for users with motor impairments or those who rely on keyboard navigation. Ensure that all interactive elements on your website, such as links, buttons, form fields, and menus, are fully accessible via keyboard navigation. Elements should be navigable using the Tab key, and their focus states should be clearly visible. Avoid relying solely on mouse events like `onclick` for important functionality, as this may exclude keyboard-only users.

Q5:- Create a web page that highlights the features of HTML5. Use appropriate semantic tags to structure the
content and showcase at least three key features of HTML5 with explanations.
sol:-<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HTML5 Features</title>
</head>
<body>
    <header>
        <h1>HTML5 Features</h1>
    </header>

    <nav>
        <ul>
            <li><a href="#semantic">Semantic Elements</a></li>
            <li><a href="#video">Video Support</a></li>
            <li><a href="#canvas">Canvas</a></li>
        </ul>
    </nav>

    <main>
        <section id="semantic">
            <h2>Semantic Elements</h2>
            <p>HTML5 introduces semantic elements like &lt;header&gt;, &lt;nav&gt;, &lt;section&gt;, &lt;article&gt;, &lt;footer&gt;, etc., which provide better structure to web pages and improve accessibility. Semantic elements help search engines and screen readers understand the content more accurately.</p>
        </section>

        <section id="video">
            <h2>Video Support</h2>
            <p>HTML5 provides native support for embedding video content using the &lt;video&gt; tag. This eliminates the need for third-party plugins like Flash. With HTML5 video, developers can easily embed videos on web pages and customize playback controls, sizes, and formats.</p>
            <video controls width="400">
                <source src="example.mp4" type="video/mp4">
                Your browser does not support the video tag.
            </video>
        </section>

        <section id="canvas">
            <h2>Canvas</h2>
            <p>The &lt;canvas&gt; element in HTML5 allows for dynamic, scriptable rendering of 2D shapes and bitmap images. It is widely used for creating interactive games, data visualizations, and other graphics-intensive applications. Developers can use JavaScript to draw graphics, animations, and even manipulate images directly within the browser.</p>
            <canvas id="myCanvas" width="400" height="200" style="border:1px solid #000;"></canvas>
            <script>
                var canvas = document.getElementById("myCanvas");
                var ctx = canvas.getContext("2d");
                ctx.fillStyle = "#FF0000";
                ctx.fillRect(20, 20, 150, 100);
            </script>
        </section>
    </main>

    <footer>
        <p>&copy; 2024 HTML5 Features Demo</p>
    </footer>
</body>
</html>

Q6:- Create a simple web page which has a table. The table must have 2 columns HTML and HTML5. The table
should include a minimum of three rows describing the differences between HTML and HTML5.
sol:- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HTML vs HTML5</title>
</head>
<body>
    <h1>Comparison between HTML and HTML5</h1>

    <table border="1">
        <tr>
            <th>HTML</th>
            <th>HTML5</th>
        </tr>
        <tr>
            <td>Uses presentational elements like &lt;font&gt;, &lt;center&gt;</td>
            <td>Removes presentational elements and focuses on semantic elements</td>
        </tr>
        <tr>
            <td>Doesn't support native video and audio embedding</td>
            <td>Introduces native support for <code>&lt;video&gt;</code> and <code>&lt;audio&gt;</code> tags</td>
        </tr>
        <tr>
            <td>Requires the use of plugins like Flash for rich media content</td>
            <td>Allows embedding of multimedia content without the need for plugins</td>
        </tr>
    </table>
</body>
</html>
